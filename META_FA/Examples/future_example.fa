Declare Dfa
    States = (s1, s2, s3)
    Initial = s1
    Finals = (s3)
    Table = (
        <s1 a s3>
        <s1 b s2>
        <s1 c s1>
        <s2 c s1>
        <s3 b s2>
    )
End Declare

// (a?bc+)*a

/*
 (a?bc+)*a
*/

Declare Nfa
    States = (s1, s2, s3)
    Initial = s1
    Finals = (s3)
    Table = (
        <s1 a s3>
        <s1 b s2>
        <s1 c s1>
        <s2 c s1>
        <s3 b s2>
    )
End Declare

Asset(Dfa, "ccca", true)
Asset(Dfa, "abca", true)
Asset(Dfa, "abcbcbcabca", true)
Asset(Dfa, "bca", true)
Asset(Dfa, "abca", true)
Asset(Dfa, "a", true)
Asset(Dfa, "ca", true)

// function ==> "Function" -- [identity] -- "(" -- [func_args] -- ")" -- [function_body]? -- "End" -- "Function"
// function_body ==> [statement]+
// func_args ==> [variable] -- "," -- [func_args_list]
// func_args_list ==> [variable_type] -- [variable_name] -- [func_args_list]
// func_args_list ==> [variable_type] -- [variable_name]
// variable_name ==> r"[a-z_]?[a-z]+"
// str => r"\"[^\"]\""

Function SomeFunc (env, int a, bool b, string c) 

End Function
    
